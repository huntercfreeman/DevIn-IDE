@using System.Reflection;

<div class="di_ide_info">

	<div>
        Source Code:
        <a target="_blank"
           href="https://github.com/DevIn/DevIn.Ide">
            
           DevIn.Ide
        </a>
    </div>

	<hr/>

	<div>
        Entry Assembly:
		@{ var entryAssembly = System.Reflection.Assembly.GetEntryAssembly(); }
		<div>
			@{ var entryAssemblyName = entryAssembly.GetName(); }
            v
            <em class="di_em" title="Version">
                @(entryAssemblyName.Version)
            </em>
            ::
			@if (AssemblyCustomAttributeIsDebug(entryAssembly))
			{
				@: Debug
			}
			else
			{
				@: Release
			}
			::
            @entryAssemblyName.Name
        </div>
    </div>

	<div class="di_ide_info-main">
        Library:
    	@{ var ideAssembly = typeof(IdeInfoDisplay).Assembly; }
        <div>
			@{ var ideAssemblyName = ideAssembly.GetName(); }
            v
            <em class="di_em" title="Version">
                @(ideAssemblyName.Version)
            </em>
            ::
			@if (AssemblyCustomAttributeIsDebug(ideAssembly))
			{
				@: Debug
			}
			else
			{
				@: Release
			}
			::
            @ideAssemblyName.Name
        </div>
    </div>

	<hr/>

	<div>
		<table>
			<tr>
				<td>IsDebug_MethodConditionalAttribute_Test:</td>
				<td>@MethodConditionalAttributeIsDebug()</td>
			</tr>
			<tr>
				<td>IsDebug_Preprocessor_Test:</td>
				<td>@PreprocessorIsDebug()</td>
			</tr>
		</table>
	</div>

	<hr/>

	<div class="di_ide_info-references">
        <div>
            References
        </div>

        @{
            var referencedDevInAssembliesList = ideAssembly
                .GetReferencedAssemblies()
                .Where(x =>
					x.Name is not null &&
					(x.Name.StartsWith("DevIn") ||
						x.Name.StartsWith("Fluxor") ||
						x.Name.StartsWith("Photino")))
				.OrderByDescending(x => x.Name.StartsWith("DevIn"))
				.ToList();

			referencedDevInAssembliesList.AddRange(entryAssembly
                .GetReferencedAssemblies()
                .Where(x =>
					x.Name is not null &&
					x.Name.StartsWith("Photino")));
        }

        @foreach (var referencedDevInAssembly in referencedDevInAssembliesList)
        {
            if (referencedDevInAssembly.Name is null)
                continue;

            <div>
                v
                <em class="di_em" title="Version">
                    @(referencedDevInAssembly.Version)
                </em>
                ::
				@if (AssemblyCustomAttributeIsDebug(Assembly.Load(referencedDevInAssembly)))
				{
					@: Debug
				}
				else
				{
					@: Release
				}
				::
                @referencedDevInAssembly.Name
            </div>
        }
    </div>

	<hr/>
	
	@*<div>
		BackgroundTaskWorkers:
		<div>
			<div>
				ContinuousBackgroundTaskWorker: @(BackgroundTaskService.ContinuousTaskWorker.ExecuteTask?.Status.ToString() ?? "null")
			</div>
			<div>
				BlockingBackgroundTaskWorker: @(BackgroundTaskService.IndefiniteTaskWorker.ExecuteTask?.Status.ToString() ?? "null")
			</div>
		</div>
	</div>*@

	<hr/>
	
	<div>
        DevInHostingInformation:
		<div>
            <div>
                @nameof(DevInHostingInformation.DevInHostingKind): @DevInHostingInformation.DevInHostingKind
            </div>
            <div>
                @nameof(DevInHostingInformation.DevInPurposeKind): @DevInHostingInformation.DevInPurposeKind
            </div>
            <div>
                @nameof(DevInHostingInformation.BackgroundTaskService):
                @if (DevInHostingInformation.BackgroundTaskService is null)
                {
                    <text>null</text>
                }
                else
                {
                    <text>NOT-null</text>
                }
            </div>
            <div>
                @nameof(DevInHostingInformation.GetMainWindowScreenDpiFunc): @DevInHostingInformation.GetMainWindowScreenDpiFunc.Invoke()
            </div>
		</div>
	</div>
	
	<hr/>

	<div>
        Recent Changes:
		<div>
            <div>
                <div>v <em class="di_em">1.0.0 </em> (WIP_DATE)</div>
                <ul>
                	<li>
                		Draft PR
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>
